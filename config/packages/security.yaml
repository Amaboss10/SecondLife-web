security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #users_in_memory: { memory: null }
        # secondLife_user_provider:
        #     entity:
        #         class: App\Entity\User
        #         property: email_personne
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: mail_personne
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: in_database

            form_login:
                login_path: secondlife_connexion
                check_path: secondlife_connexion

             
            guard:
                authenticators:
                    - App\Security\UserAuthenticator
                    - App\Security\LoginFromAuthenticator
                entry_point: App\Security\UserAuthenticator
            #deconnexion
            logout:
                path: secondLife_deconnexion
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            
            #option se souvenir de moi
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
